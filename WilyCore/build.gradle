plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kotlin {
    compilerOptions {
        // This is needed so that @JvmDefaultWithoutCompatibility works for the Action class
        // definition:
        freeCompilerArgs.set(["-Xjvm-default=all"])
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', {System.getenv('SRC_ROOT')}]
        }
    }
}

// LWJGL for gamepad input, generated from https://www.lwjgl.org/customize for just the "GLFW"
// module for MacOS arm64 and Windows x64.
import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.3.6"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        def osArch = System.getProperty("os.arch")
        if (osArch.startsWith("arm") || osArch.startsWith("aarch64")) {
            project.ext.lwjglNatives += osArch.contains("64") || osArch.startsWith("armv8") ? "-arm64" : "-arm32"
        } else if  (osArch.startsWith("ppc")) {
            project.ext.lwjglNatives += "-ppc64le"
        } else if  (osArch.startsWith("riscv")) {
            project.ext.lwjglNatives += "-riscv64"
        }
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos-arm64"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.brott.dev/' }
}

dependencies {
    implementation project(path: ':WilyWorks')
    implementation "com.acmerobotics.roadrunner:core:1.0.0" // For Pose2d, PoseVelocity2d, etc.
    implementation "org.reflections:reflections:0.10.2" // For enumerating classes with annotations
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" // For enumerating all classes
    implementation "com.google.code.gson:gson:2.11.0" // For serializing Java objects to JSON
    implementation 'net.bytebuddy:byte-buddy:1.15.10' // For proxying classes rather than interfaces
    implementation 'org.objenesis:objenesis:3.2' // Instantiate class without invoking a constructor

    // Lwjgl for gamepad input:
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
